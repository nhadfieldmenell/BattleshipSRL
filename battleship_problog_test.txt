% 4x4 board
% 2 boats of length 2
% 1-indexed

size(first, 2).
size(second, 2).
boat(first).
boat(second).

0.5::horizontal(B); 0.5::vertical(B) :- boat(B).

row_col_range(Row, Col) :- between(1, 4, Row), between(1, 4, Col).

double_stacked_constraint :- boat(B), boat(C), not(B = C), row_col_range(Row, Col), occupied(B, Row, Col), occupied(C, Row, Col).
two_places_constraint :- boat(B), row_col_range(Row1, Col1), row_col_range(Row2, Col2), not(Row1 = Row2), not(Col1 = Col2), loc(B, Row1, Col1), loc(B, Row2, Col2).
boat_in_unoccupied_constraint :- boat(B), row_col_range(Row, Col), not(boat_in(Row,Col)), occupied(B, Row, Col).
loc_not_occupied_constraint :- boat(B), row_col_range(Row1, Col1), row_col_range(Row2, Col2), not(occupied(B, Row1, Col1)), loc(B, Row2, Col2), pos_in_range(B, Row1, Col1, Row2, Col2).
occupied_not_far_constraint :- boat(B), row_col_range(Row1, Col1), row_col_range(Row2, Col2), occupied(B, Row1, Col1), loc(B, Row2, Col2), not(pos_in_range(B, Row1, Col1, Row2, Col2)).

pos_in_range(B, Row1, Col1, Row2, Col2) :- boat(B), horizontal(B), Row1 = Row2, size(B, L), Col1-Col2 < L, Col1-Col2 >= 0.
pos_in_range(B, Row1, Col1, Row2, Col2) :- boat(B), vertical(B), Col1 = Col2, size(B, L), Row1-Row2 < L, Row1-Row2 >= 0.

% there are boardsize * (boardsize + 1 - L) equally likely positions to place a horizontal boat of length L (same for vertical)
1/12::loc(B, Row, Col) :-  boat(B), between(1, 4, Row), between(1, 3, Col), horizontal(B), size(B, 2).
1/12::loc(B, Row, Col) :-  boat(B), between(1, 3, Row), between(1, 4, Col), vertical(B), size(B, 2).

occupied(B, Row, Col) :- boat(B), horizontal(B), loc(B, Row, Z), size(B, L), Col-Z < L, Col-Z >= 0, Row > 0, Col > 0.
occupied(B, Row, Col) :- boat(B), vertical(B), loc(B, Z, Col), size(B, L), Row-Z < L, Row-Z >= 0, Row > 0, Col > 0.

boat_in(Row, Col) :- boat(B), occupied(B, Row, Col).




evidence(not(double_stacked_constraint)).
evidence(not(two_places_constraint)).
evidence(not(boat_in_unoccupied_constraint)).
evidence(not(loc_not_occupied_constraint)).
evidence(not(occupied_not_far_constraint)).



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%TESTING%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%evidence(not(boat_in(1,1))).
evidence(boat_in(1,2)).
evidence(boat_in(2,1)).


query(boat_in(1,1)).
query(boat_in(1,3)).
query(occupied(second, 1, 2)).
query(occupied(first,3,3)).

%query(occupied(first,1,2)).
%query(occupied(second,1,2)).

query(loc(second,1,1)).
query(loc(second,1,2)).
query(loc(second,1,3)).
query(loc(second,2,1)).
query(loc(second,2,2)).
query(loc(second,3,3)).
query(loc(second,4,2)).

%query(occupied(first,1,1)).
%query(occupied(second,1,1)).
%query(boat_in(1,2)).
%query(boat_in(1,3)).
%query(boat_in(1,4)).
%query(boat_in(2,1)).
%query(boat_in(2,2)).
%query(boat_in(2,3)).
%query(boat_in(2,4)).
%query(boat_in(3,1)).
%query(boat_in(3,2)).
query(boat_in(3,3)).
%query(boat_in(3,4)).
%query(boat_in(4,4)).
%query(boat_in(4,1)).
%query(boat_in(4,2)).
%query(boat_in(4,3)).
%query(boat_in(4,4)).
%query(loc(first, 2,2)).