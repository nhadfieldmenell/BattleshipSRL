# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.40
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.
# This file is compatible with both classic and new-style classes.

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_sdd', [dirname(__file__)])
        except ImportError:
            import _sdd
            return _sdd
        if fp is not None:
            try:
                _mod = imp.load_module('_sdd', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _sdd = swig_import_helper()
    del swig_import_helper
else:
    import _sdd
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


PRIsS = _sdd.PRIsS
PRInsS = _sdd.PRInsS
PRIrcS = _sdd.PRIrcS
PRImcS = _sdd.PRImcS
PRIlitS = _sdd.PRIlitS
CONJOIN = _sdd.CONJOIN
DISJOIN = _sdd.DISJOIN

def sdd_manager_new(*args):
  return _sdd.sdd_manager_new(*args)
sdd_manager_new = _sdd.sdd_manager_new

def sdd_manager_create(*args):
  return _sdd.sdd_manager_create(*args)
sdd_manager_create = _sdd.sdd_manager_create

def sdd_manager_copy(*args):
  return _sdd.sdd_manager_copy(*args)
sdd_manager_copy = _sdd.sdd_manager_copy

def sdd_manager_free(*args):
  return _sdd.sdd_manager_free(*args)
sdd_manager_free = _sdd.sdd_manager_free

def sdd_manager_print(*args):
  return _sdd.sdd_manager_print(*args)
sdd_manager_print = _sdd.sdd_manager_print

def sdd_manager_auto_gc_and_minimize_on(*args):
  return _sdd.sdd_manager_auto_gc_and_minimize_on(*args)
sdd_manager_auto_gc_and_minimize_on = _sdd.sdd_manager_auto_gc_and_minimize_on

def sdd_manager_auto_gc_and_minimize_off(*args):
  return _sdd.sdd_manager_auto_gc_and_minimize_off(*args)
sdd_manager_auto_gc_and_minimize_off = _sdd.sdd_manager_auto_gc_and_minimize_off

def sdd_manager_is_auto_gc_and_minimize_on(*args):
  return _sdd.sdd_manager_is_auto_gc_and_minimize_on(*args)
sdd_manager_is_auto_gc_and_minimize_on = _sdd.sdd_manager_is_auto_gc_and_minimize_on

def sdd_manager_set_minimize_function(*args):
  return _sdd.sdd_manager_set_minimize_function(*args)
sdd_manager_set_minimize_function = _sdd.sdd_manager_set_minimize_function

def sdd_manager_unset_minimize_function(*args):
  return _sdd.sdd_manager_unset_minimize_function(*args)
sdd_manager_unset_minimize_function = _sdd.sdd_manager_unset_minimize_function

def sdd_manager_options(*args):
  return _sdd.sdd_manager_options(*args)
sdd_manager_options = _sdd.sdd_manager_options

def sdd_manager_set_options(*args):
  return _sdd.sdd_manager_set_options(*args)
sdd_manager_set_options = _sdd.sdd_manager_set_options

def sdd_manager_is_var_used(*args):
  return _sdd.sdd_manager_is_var_used(*args)
sdd_manager_is_var_used = _sdd.sdd_manager_is_var_used

def sdd_manager_vtree_of_var(*args):
  return _sdd.sdd_manager_vtree_of_var(*args)
sdd_manager_vtree_of_var = _sdd.sdd_manager_vtree_of_var

def sdd_manager_lca_of_literals(*args):
  return _sdd.sdd_manager_lca_of_literals(*args)
sdd_manager_lca_of_literals = _sdd.sdd_manager_lca_of_literals

def sdd_manager_var_count(*args):
  return _sdd.sdd_manager_var_count(*args)
sdd_manager_var_count = _sdd.sdd_manager_var_count

def sdd_manager_var_order(*args):
  return _sdd.sdd_manager_var_order(*args)
sdd_manager_var_order = _sdd.sdd_manager_var_order

def sdd_manager_add_var_before_first(*args):
  return _sdd.sdd_manager_add_var_before_first(*args)
sdd_manager_add_var_before_first = _sdd.sdd_manager_add_var_before_first

def sdd_manager_add_var_after_last(*args):
  return _sdd.sdd_manager_add_var_after_last(*args)
sdd_manager_add_var_after_last = _sdd.sdd_manager_add_var_after_last

def sdd_manager_add_var_before(*args):
  return _sdd.sdd_manager_add_var_before(*args)
sdd_manager_add_var_before = _sdd.sdd_manager_add_var_before

def sdd_manager_add_var_after(*args):
  return _sdd.sdd_manager_add_var_after(*args)
sdd_manager_add_var_after = _sdd.sdd_manager_add_var_after

def sdd_manager_true(*args):
  return _sdd.sdd_manager_true(*args)
sdd_manager_true = _sdd.sdd_manager_true

def sdd_manager_false(*args):
  return _sdd.sdd_manager_false(*args)
sdd_manager_false = _sdd.sdd_manager_false

def sdd_manager_literal(*args):
  return _sdd.sdd_manager_literal(*args)
sdd_manager_literal = _sdd.sdd_manager_literal

def sdd_apply(*args):
  return _sdd.sdd_apply(*args)
sdd_apply = _sdd.sdd_apply

def sdd_conjoin(*args):
  return _sdd.sdd_conjoin(*args)
sdd_conjoin = _sdd.sdd_conjoin

def sdd_disjoin(*args):
  return _sdd.sdd_disjoin(*args)
sdd_disjoin = _sdd.sdd_disjoin

def sdd_negate(*args):
  return _sdd.sdd_negate(*args)
sdd_negate = _sdd.sdd_negate

def sdd_condition(*args):
  return _sdd.sdd_condition(*args)
sdd_condition = _sdd.sdd_condition

def sdd_exists(*args):
  return _sdd.sdd_exists(*args)
sdd_exists = _sdd.sdd_exists

def sdd_exists_multiple(*args):
  return _sdd.sdd_exists_multiple(*args)
sdd_exists_multiple = _sdd.sdd_exists_multiple

def sdd_forall(*args):
  return _sdd.sdd_forall(*args)
sdd_forall = _sdd.sdd_forall

def sdd_minimize_cardinality(*args):
  return _sdd.sdd_minimize_cardinality(*args)
sdd_minimize_cardinality = _sdd.sdd_minimize_cardinality

def sdd_minimum_cardinality(*args):
  return _sdd.sdd_minimum_cardinality(*args)
sdd_minimum_cardinality = _sdd.sdd_minimum_cardinality

def sdd_model_count(*args):
  return _sdd.sdd_model_count(*args)
sdd_model_count = _sdd.sdd_model_count

def sdd_node_is_true(*args):
  return _sdd.sdd_node_is_true(*args)
sdd_node_is_true = _sdd.sdd_node_is_true

def sdd_node_is_false(*args):
  return _sdd.sdd_node_is_false(*args)
sdd_node_is_false = _sdd.sdd_node_is_false

def sdd_node_is_literal(*args):
  return _sdd.sdd_node_is_literal(*args)
sdd_node_is_literal = _sdd.sdd_node_is_literal

def sdd_node_is_decision(*args):
  return _sdd.sdd_node_is_decision(*args)
sdd_node_is_decision = _sdd.sdd_node_is_decision

def sdd_node_size(*args):
  return _sdd.sdd_node_size(*args)
sdd_node_size = _sdd.sdd_node_size

def sdd_node_literal(*args):
  return _sdd.sdd_node_literal(*args)
sdd_node_literal = _sdd.sdd_node_literal

def sdd_node_elements(*args):
  return _sdd.sdd_node_elements(*args)
sdd_node_elements = _sdd.sdd_node_elements

def sdd_node_set_bit(*args):
  return _sdd.sdd_node_set_bit(*args)
sdd_node_set_bit = _sdd.sdd_node_set_bit

def sdd_node_bit(*args):
  return _sdd.sdd_node_bit(*args)
sdd_node_bit = _sdd.sdd_node_bit

def sdd_id(*args):
  return _sdd.sdd_id(*args)
sdd_id = _sdd.sdd_id

def sdd_garbage_collected(*args):
  return _sdd.sdd_garbage_collected(*args)
sdd_garbage_collected = _sdd.sdd_garbage_collected

def sdd_vtree_of(*args):
  return _sdd.sdd_vtree_of(*args)
sdd_vtree_of = _sdd.sdd_vtree_of

def sdd_copy(*args):
  return _sdd.sdd_copy(*args)
sdd_copy = _sdd.sdd_copy

def sdd_rename_variables(*args):
  return _sdd.sdd_rename_variables(*args)
sdd_rename_variables = _sdd.sdd_rename_variables

def sdd_variables(*args):
  return _sdd.sdd_variables(*args)
sdd_variables = _sdd.sdd_variables

def sdd_read(*args):
  return _sdd.sdd_read(*args)
sdd_read = _sdd.sdd_read

def sdd_save(*args):
  return _sdd.sdd_save(*args)
sdd_save = _sdd.sdd_save

def sdd_save_as_dot(*args):
  return _sdd.sdd_save_as_dot(*args)
sdd_save_as_dot = _sdd.sdd_save_as_dot

def sdd_shared_save_as_dot(*args):
  return _sdd.sdd_shared_save_as_dot(*args)
sdd_shared_save_as_dot = _sdd.sdd_shared_save_as_dot

def sdd_count(*args):
  return _sdd.sdd_count(*args)
sdd_count = _sdd.sdd_count

def sdd_size(*args):
  return _sdd.sdd_size(*args)
sdd_size = _sdd.sdd_size

def sdd_shared_size(*args):
  return _sdd.sdd_shared_size(*args)
sdd_shared_size = _sdd.sdd_shared_size

def sdd_manager_size(*args):
  return _sdd.sdd_manager_size(*args)
sdd_manager_size = _sdd.sdd_manager_size

def sdd_manager_live_size(*args):
  return _sdd.sdd_manager_live_size(*args)
sdd_manager_live_size = _sdd.sdd_manager_live_size

def sdd_manager_dead_size(*args):
  return _sdd.sdd_manager_dead_size(*args)
sdd_manager_dead_size = _sdd.sdd_manager_dead_size

def sdd_manager_count(*args):
  return _sdd.sdd_manager_count(*args)
sdd_manager_count = _sdd.sdd_manager_count

def sdd_manager_live_count(*args):
  return _sdd.sdd_manager_live_count(*args)
sdd_manager_live_count = _sdd.sdd_manager_live_count

def sdd_manager_dead_count(*args):
  return _sdd.sdd_manager_dead_count(*args)
sdd_manager_dead_count = _sdd.sdd_manager_dead_count

def sdd_vtree_size(*args):
  return _sdd.sdd_vtree_size(*args)
sdd_vtree_size = _sdd.sdd_vtree_size

def sdd_vtree_live_size(*args):
  return _sdd.sdd_vtree_live_size(*args)
sdd_vtree_live_size = _sdd.sdd_vtree_live_size

def sdd_vtree_dead_size(*args):
  return _sdd.sdd_vtree_dead_size(*args)
sdd_vtree_dead_size = _sdd.sdd_vtree_dead_size

def sdd_vtree_count(*args):
  return _sdd.sdd_vtree_count(*args)
sdd_vtree_count = _sdd.sdd_vtree_count

def sdd_vtree_live_count(*args):
  return _sdd.sdd_vtree_live_count(*args)
sdd_vtree_live_count = _sdd.sdd_vtree_live_count

def sdd_vtree_dead_count(*args):
  return _sdd.sdd_vtree_dead_count(*args)
sdd_vtree_dead_count = _sdd.sdd_vtree_dead_count

def sdd_vtree_size_at(*args):
  return _sdd.sdd_vtree_size_at(*args)
sdd_vtree_size_at = _sdd.sdd_vtree_size_at

def sdd_vtree_live_size_at(*args):
  return _sdd.sdd_vtree_live_size_at(*args)
sdd_vtree_live_size_at = _sdd.sdd_vtree_live_size_at

def sdd_vtree_dead_size_at(*args):
  return _sdd.sdd_vtree_dead_size_at(*args)
sdd_vtree_dead_size_at = _sdd.sdd_vtree_dead_size_at

def sdd_vtree_count_at(*args):
  return _sdd.sdd_vtree_count_at(*args)
sdd_vtree_count_at = _sdd.sdd_vtree_count_at

def sdd_vtree_live_count_at(*args):
  return _sdd.sdd_vtree_live_count_at(*args)
sdd_vtree_live_count_at = _sdd.sdd_vtree_live_count_at

def sdd_vtree_dead_count_at(*args):
  return _sdd.sdd_vtree_dead_count_at(*args)
sdd_vtree_dead_count_at = _sdd.sdd_vtree_dead_count_at

def sdd_vtree_new(*args):
  return _sdd.sdd_vtree_new(*args)
sdd_vtree_new = _sdd.sdd_vtree_new

def sdd_vtree_new_with_var_order(*args):
  return _sdd.sdd_vtree_new_with_var_order(*args)
sdd_vtree_new_with_var_order = _sdd.sdd_vtree_new_with_var_order

def sdd_vtree_free(*args):
  return _sdd.sdd_vtree_free(*args)
sdd_vtree_free = _sdd.sdd_vtree_free

def sdd_vtree_save(*args):
  return _sdd.sdd_vtree_save(*args)
sdd_vtree_save = _sdd.sdd_vtree_save

def sdd_vtree_read(*args):
  return _sdd.sdd_vtree_read(*args)
sdd_vtree_read = _sdd.sdd_vtree_read

def sdd_vtree_save_as_dot(*args):
  return _sdd.sdd_vtree_save_as_dot(*args)
sdd_vtree_save_as_dot = _sdd.sdd_vtree_save_as_dot

def sdd_manager_vtree(*args):
  return _sdd.sdd_manager_vtree(*args)
sdd_manager_vtree = _sdd.sdd_manager_vtree

def sdd_manager_vtree_copy(*args):
  return _sdd.sdd_manager_vtree_copy(*args)
sdd_manager_vtree_copy = _sdd.sdd_manager_vtree_copy

def sdd_vtree_left(*args):
  return _sdd.sdd_vtree_left(*args)
sdd_vtree_left = _sdd.sdd_vtree_left

def sdd_vtree_right(*args):
  return _sdd.sdd_vtree_right(*args)
sdd_vtree_right = _sdd.sdd_vtree_right

def sdd_vtree_parent(*args):
  return _sdd.sdd_vtree_parent(*args)
sdd_vtree_parent = _sdd.sdd_vtree_parent

def sdd_vtree_is_leaf(*args):
  return _sdd.sdd_vtree_is_leaf(*args)
sdd_vtree_is_leaf = _sdd.sdd_vtree_is_leaf

def sdd_vtree_is_sub(*args):
  return _sdd.sdd_vtree_is_sub(*args)
sdd_vtree_is_sub = _sdd.sdd_vtree_is_sub

def sdd_vtree_lca(*args):
  return _sdd.sdd_vtree_lca(*args)
sdd_vtree_lca = _sdd.sdd_vtree_lca

def sdd_vtree_var_count(*args):
  return _sdd.sdd_vtree_var_count(*args)
sdd_vtree_var_count = _sdd.sdd_vtree_var_count

def sdd_vtree_var(*args):
  return _sdd.sdd_vtree_var(*args)
sdd_vtree_var = _sdd.sdd_vtree_var

def sdd_vtree_position(*args):
  return _sdd.sdd_vtree_position(*args)
sdd_vtree_position = _sdd.sdd_vtree_position

def sdd_vtree_location(*args):
  return _sdd.sdd_vtree_location(*args)
sdd_vtree_location = _sdd.sdd_vtree_location

def sdd_vtree_rotate_left(*args):
  return _sdd.sdd_vtree_rotate_left(*args)
sdd_vtree_rotate_left = _sdd.sdd_vtree_rotate_left

def sdd_vtree_rotate_right(*args):
  return _sdd.sdd_vtree_rotate_right(*args)
sdd_vtree_rotate_right = _sdd.sdd_vtree_rotate_right

def sdd_vtree_swap(*args):
  return _sdd.sdd_vtree_swap(*args)
sdd_vtree_swap = _sdd.sdd_vtree_swap

def sdd_manager_set_size_limit_context(*args):
  return _sdd.sdd_manager_set_size_limit_context(*args)
sdd_manager_set_size_limit_context = _sdd.sdd_manager_set_size_limit_context

def sdd_manager_update_size_limit_context(*args):
  return _sdd.sdd_manager_update_size_limit_context(*args)
sdd_manager_update_size_limit_context = _sdd.sdd_manager_update_size_limit_context

def sdd_vtree_bit(*args):
  return _sdd.sdd_vtree_bit(*args)
sdd_vtree_bit = _sdd.sdd_vtree_bit

def sdd_vtree_set_bit(*args):
  return _sdd.sdd_vtree_set_bit(*args)
sdd_vtree_set_bit = _sdd.sdd_vtree_set_bit

def sdd_vtree_data(*args):
  return _sdd.sdd_vtree_data(*args)
sdd_vtree_data = _sdd.sdd_vtree_data

def sdd_vtree_set_data(*args):
  return _sdd.sdd_vtree_set_data(*args)
sdd_vtree_set_data = _sdd.sdd_vtree_set_data

def sdd_vtree_search_state(*args):
  return _sdd.sdd_vtree_search_state(*args)
sdd_vtree_search_state = _sdd.sdd_vtree_search_state

def sdd_vtree_set_search_state(*args):
  return _sdd.sdd_vtree_set_search_state(*args)
sdd_vtree_set_search_state = _sdd.sdd_vtree_set_search_state

def sdd_ref_count(*args):
  return _sdd.sdd_ref_count(*args)
sdd_ref_count = _sdd.sdd_ref_count

def sdd_ref(*args):
  return _sdd.sdd_ref(*args)
sdd_ref = _sdd.sdd_ref

def sdd_deref(*args):
  return _sdd.sdd_deref(*args)
sdd_deref = _sdd.sdd_deref

def sdd_manager_garbage_collect(*args):
  return _sdd.sdd_manager_garbage_collect(*args)
sdd_manager_garbage_collect = _sdd.sdd_manager_garbage_collect

def sdd_vtree_garbage_collect(*args):
  return _sdd.sdd_vtree_garbage_collect(*args)
sdd_vtree_garbage_collect = _sdd.sdd_vtree_garbage_collect

def sdd_manager_garbage_collect_if(*args):
  return _sdd.sdd_manager_garbage_collect_if(*args)
sdd_manager_garbage_collect_if = _sdd.sdd_manager_garbage_collect_if

def sdd_vtree_garbage_collect_if(*args):
  return _sdd.sdd_vtree_garbage_collect_if(*args)
sdd_vtree_garbage_collect_if = _sdd.sdd_vtree_garbage_collect_if

def sdd_manager_minimize(*args):
  return _sdd.sdd_manager_minimize(*args)
sdd_manager_minimize = _sdd.sdd_manager_minimize

def sdd_vtree_minimize(*args):
  return _sdd.sdd_vtree_minimize(*args)
sdd_vtree_minimize = _sdd.sdd_vtree_minimize

def sdd_manager_set_lr_time_limit(*args):
  return _sdd.sdd_manager_set_lr_time_limit(*args)
sdd_manager_set_lr_time_limit = _sdd.sdd_manager_set_lr_time_limit

def sdd_manager_set_rr_time_limit(*args):
  return _sdd.sdd_manager_set_rr_time_limit(*args)
sdd_manager_set_rr_time_limit = _sdd.sdd_manager_set_rr_time_limit

def sdd_manager_set_sw_time_limit(*args):
  return _sdd.sdd_manager_set_sw_time_limit(*args)
sdd_manager_set_sw_time_limit = _sdd.sdd_manager_set_sw_time_limit

def sdd_manager_set_lr_size_limit(*args):
  return _sdd.sdd_manager_set_lr_size_limit(*args)
sdd_manager_set_lr_size_limit = _sdd.sdd_manager_set_lr_size_limit

def sdd_manager_set_rr_size_limit(*args):
  return _sdd.sdd_manager_set_rr_size_limit(*args)
sdd_manager_set_rr_size_limit = _sdd.sdd_manager_set_rr_size_limit

def sdd_manager_set_sw_size_limit(*args):
  return _sdd.sdd_manager_set_sw_size_limit(*args)
sdd_manager_set_sw_size_limit = _sdd.sdd_manager_set_sw_size_limit

def sdd_manager_set_rr_cartesian_product_limit(*args):
  return _sdd.sdd_manager_set_rr_cartesian_product_limit(*args)
sdd_manager_set_rr_cartesian_product_limit = _sdd.sdd_manager_set_rr_cartesian_product_limit

def sdd_manager_set_sw_cartesian_product_limit(*args):
  return _sdd.sdd_manager_set_sw_cartesian_product_limit(*args)
sdd_manager_set_sw_cartesian_product_limit = _sdd.sdd_manager_set_sw_cartesian_product_limit

def sdd_manager_set_convergence_threshold(*args):
  return _sdd.sdd_manager_set_convergence_threshold(*args)
sdd_manager_set_convergence_threshold = _sdd.sdd_manager_set_convergence_threshold

def wmc_manager_new(*args):
  return _sdd.wmc_manager_new(*args)
wmc_manager_new = _sdd.wmc_manager_new

def wmc_manager_free(*args):
  return _sdd.wmc_manager_free(*args)
wmc_manager_free = _sdd.wmc_manager_free

def wmc_set_literal_weight(*args):
  return _sdd.wmc_set_literal_weight(*args)
wmc_set_literal_weight = _sdd.wmc_set_literal_weight

def wmc_propagate(*args):
  return _sdd.wmc_propagate(*args)
wmc_propagate = _sdd.wmc_propagate

def wmc_zero_weight(*args):
  return _sdd.wmc_zero_weight(*args)
wmc_zero_weight = _sdd.wmc_zero_weight

def wmc_one_weight(*args):
  return _sdd.wmc_one_weight(*args)
wmc_one_weight = _sdd.wmc_one_weight

def wmc_literal_weight(*args):
  return _sdd.wmc_literal_weight(*args)
wmc_literal_weight = _sdd.wmc_literal_weight

def wmc_literal_derivative(*args):
  return _sdd.wmc_literal_derivative(*args)
wmc_literal_derivative = _sdd.wmc_literal_derivative

def wmc_literal_pr(*args):
  return _sdd.wmc_literal_pr(*args)
wmc_literal_pr = _sdd.wmc_literal_pr


